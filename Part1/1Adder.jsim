.include "nominal.jsim"
.include "stdcell.jsim"
* .include "2dcheckoff_100ns.jsim"

* basic FA
* S = A xor B xor Cin
* Co = (A + B)Cin + AB
.subckt FA a b cin s co
Xs1 a b s1 xor2
Xs2 s1 cin s xor2
Xc1 a b co1 nand2
Xc2 a cin co2 nand2
Xc3 b cin co3 nand2
Xc4 co1 co2 co3 co nand3
.ends



* Single carry generate and carry propagate
* G_i = A_i * B_i --> do this with (nand + inv)
* P_i = A_i xor B_i
.subckt PG a b g p
Xp a b p xor2
Xg_inv a b ginv nand2
Xg ginv g inverter
.ends


* 1bit CLA
.subckt CLA1 a b cin g p s
Xs1 a b p xor2
Xs2 cin p s xor2
Xg_inv a b ginv nand2
Xg ginv g inverter
.ends